{"version":3,"sources":["components/Header.js","components/Document/DocumentName.js","components/Document/Toolbar.js","components/Document/DocumentMarkdown.js","components/Document/DocumentPreview.js","components/Document/Document.js","components/Footer.js","App.js","index.js"],"names":["Header","react_default","a","createElement","DocumentName","_useState","useState","_useState2","Object","slicedToArray","name","setName","className","htmlFor","type","value","onChange","e","target","placeholder","Toolbar","props","children","DocumentMarkdown","_ref","markdown","handleChangeMarkdown","handleResetMarkdown","Document_Toolbar","onClick","id","DocumentPreview","preview","marked","setOptions","gfm","breaks","sanitize","Document","_useSessionStorage","storageKey","sessionStorage","getItem","data","setData","useEffect","setItem","useSessionStorage","_useSessionStorage2","setMarkdown","Document_DocumentName","Document_DocumentMarkdown","Document_DocumentPreview","ReactHtmlParser","Footer","App","components_Header","components_Document_Document","components_Footer","ReactDOM","render","src_App","document","getElementById"],"mappings":"iNAWeA,SATA,WACb,OACEC,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,gECiBSC,EApBM,WAAM,IAAAC,EACDC,mBAAS,IADRC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAClBK,EADkBH,EAAA,GACZI,EADYJ,EAAA,GAMzB,OACEN,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACbX,EAAAC,EAAAC,cAAA,SAAOU,QAAQ,SAAf,iBACAZ,EAAAC,EAAAC,cAAA,SACEW,KAAK,OACLC,MAAOL,EACPM,SAVe,SAACC,GACpBN,EAAQM,EAAEC,OAAOH,QAUbL,KAAK,QACLS,YAAY,kBCNLC,EARC,SAACC,GACf,OACEpB,EAAAC,EAAAC,cAAA,OAAKS,UAAU,qBACZS,EAAMC,WCqBEC,EAtBU,SAAAC,GAA2D,IAAzDC,EAAyDD,EAAzDC,SAAUC,EAA+CF,EAA/CE,qBAAsBC,EAAyBH,EAAzBG,oBAEzD,OACE1B,EAAAC,EAAAC,cAAA,OAAKS,UAAU,YACbX,EAAAC,EAAAC,cAACyB,EAAD,KACE3B,EAAAC,EAAAC,cAAA,KAAGS,UAAU,4BAAb,YAGAX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,8BACbX,EAAAC,EAAAC,cAAA,UAAQ0B,QAASF,GAAjB,WAGJ1B,EAAAC,EAAAC,cAAA,YACEY,MAAOU,EACPT,SAAUU,EACVd,UAAU,qBACVkB,GAAG,aCAIC,EAhBS,SAAAP,GAAe,IAAbQ,EAAaR,EAAbQ,QAExB,OACE/B,EAAAC,EAAAC,cAAA,OAAKS,UAAU,WACbX,EAAAC,EAAAC,cAACyB,EAAD,KACE3B,EAAAC,EAAAC,cAAA,KAAGS,UAAU,4BAAb,YAIFX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,oBAAoBkB,GAAG,WACnCE,KCNTC,IAAOC,WAAW,CAChBC,KAAK,EACLC,QAAQ,EACRC,UAAU,IAIZ,IAmDeC,EA3BE,WAAM,IAAAC,EAxBG,SAAAC,GACxB,IADsCnC,EAadC,mBAASmC,eAAeC,QAAQF,IAZlC,6UADgBjC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAa/BsC,EAb+BpC,EAAA,GAazBqC,EAbyBrC,EAAA,GAoBtC,OAJAsC,oBAAU,WACRJ,eAAeK,QAAQN,EAAYG,KAG9B,CAACA,EAAMC,GAMkBG,CAAkB,QAF7BC,EAAAxC,OAAAC,EAAA,EAAAD,CAAA+B,EAAA,GAEdd,EAFcuB,EAAA,GAEJC,EAFID,EAAA,GAYrB,OACE/C,EAAAC,EAAAC,cAAA,QAAMS,UAAU,YACdX,EAAAC,EAAAC,cAAC+C,EAAD,MACAjD,EAAAC,EAAAC,cAAA,OAAKS,UAAU,uBACbX,EAAAC,EAAAC,cAACgD,EAAD,CACE1B,SAAUA,EACVC,qBAdqB,SAACT,GAC5BgC,EAAYhC,EAAEC,OAAOH,QAcfY,oBAXoB,WAC1BsB,EAAY,OAYRhD,EAAAC,EAAAC,cAACiD,EAAD,CAAiBpB,QAASqB,IAAgBpB,IAAOR,SClD1C6B,EARA,WACb,OACErD,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,sCCWSoD,MAVf,WACE,OACEtD,EAAAC,EAAAC,cAAA,OAAKS,UAAU,aACbX,EAAAC,EAAAC,cAACqD,EAAD,MACAvD,EAAAC,EAAAC,cAACsD,EAAD,MACAxD,EAAAC,EAAAC,cAACuD,EAAD,QCNNC,IAASC,OAAO3D,EAAAC,EAAAC,cAAC0D,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.ea67c15e.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = () => {\n  return (\n    <header>\n      <h2>InstaMD</h2>\n    </header>\n\n  )\n}\n\nexport default Header;","import React, {useState} from 'react';\n\nconst DocumentName = () => {\n  const [name, setName] = useState('');\n  const handleChange = (e) => {\n    setName(e.target.value)\n  }\n\n  return (\n    <div className='document__title'>\n      <label htmlFor='title'>Document Name</label>\n      <input \n        type='text' \n        value={name} \n        onChange={handleChange} \n        name='title'\n        placeholder='untitled.md'\n      />\n    </div>\n  )\n}\n\nexport default DocumentName;","import React from 'react'\n\nconst Toolbar = (props) => {\n  return (\n    <div className=\"document__toolbar\">\n      {props.children}\n    </div>\n  )\n}\n\nexport default Toolbar","import React from 'react';\n\nimport Toolbar from './Toolbar';\n\nconst DocumentMarkdown = ({markdown, handleChangeMarkdown, handleResetMarkdown}) => {\n\n  return (\n    <div className='markdown'>\n      <Toolbar>\n        <p className='document__toolbar__title'>\n        Markdown\n        </p>\n        <div className='document__toolbar__buttons'>\n          <button onClick={handleResetMarkdown}>Reset</button>\n        </div>\n      </Toolbar>\n      <textarea\n        value={markdown}\n        onChange={handleChangeMarkdown}\n        className='markdown__textarea'\n        id='editor'\n      />\n    </div>\n  )\n}\n\nexport default DocumentMarkdown;","import React from 'react';\n\nimport Toolbar from './Toolbar';\n\nconst DocumentPreview = ({preview}) => {\n   \n  return (\n    <div className='preview'>\n      <Toolbar>\n        <p className=\"document__toolbar__title\">\n          Preview\n        </p>\n      </Toolbar>\n      <div className='preview__textarea' id='preview'>\n        {preview}\n      </div>\n    </div>\n  )\n}\n\nexport default DocumentPreview;","import React, {useState, useEffect} from 'react';\nimport marked from 'marked';\nimport ReactHtmlParser from 'react-html-parser';\n\nimport DocumentName from './DocumentName';\nimport DocumentMarkdown from './DocumentMarkdown';\nimport DocumentPreview from './DocumentPreview';\n\nmarked.setOptions({\n  gfm: true,\n  breaks: true,\n  sanitize: true\n})\n\n// Custom hook for sessionStorage functionality\nconst useSessionStorage = storageKey => {\n  const markdownTemplate = `\n  # InstaMD - Simple Markdown Previewer\n  ## What is Markdown?\n\n  Markdown is a lightweight markup language with plain text formatting syntax.\n  Learn more about Markdown:\n\n  * [Wikipedia](https://en.wikipedia.org/wiki/Markdown)\n  * [Github Mastering Markdown](https://guides.github.com/features/mastering-markdown/)\n  `\n  \n  // Use sessionStorage data or initial template when rendering component.\n  const [data, setData] = useState(sessionStorage.getItem(storageKey) || markdownTemplate)\n  \n  // When data changes set sessionStorage to current data.\n  useEffect(() => {\n    sessionStorage.setItem(storageKey, data)\n  })\n\n  return [data, setData]\n\n}\n\nconst Document = () => {\n  // Use the session storage custom hook.\n  const [markdown, setMarkdown] = useSessionStorage('data')\n\n  const handleChangeMarkdown = (e) => {\n    setMarkdown(e.target.value)\n  }\n  \n  const handleResetMarkdown = () => {\n    setMarkdown('')\n  } \n\n  return (\n    <main className='document'>\n      <DocumentName />\n      <div className='document__workspace'>\n        <DocumentMarkdown \n          markdown={markdown} \n          handleChangeMarkdown={handleChangeMarkdown}\n          handleResetMarkdown={handleResetMarkdown}\n        />\n        <DocumentPreview preview={ReactHtmlParser(marked(markdown))}/>\n      </div>\n    </main>\n  )\n}\n\nexport default Document;","import React from 'react';\n\nconst Footer = () => {\n  return (\n    <footer>\n      <small>2019&copy;yosuahohoho</small>\n    </footer>\n  )\n}\n\nexport default Footer;","import React from 'react';\n\nimport Header from './components/Header';\nimport Document from './components/Document/Document';\nimport Footer from './components/Footer';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Header />\n      <Document />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}