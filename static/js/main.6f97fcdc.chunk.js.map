{"version":3,"sources":["components/Header.js","components/Document/DocumentName.js","components/Document/Toolbar.js","components/Document/Download.js","components/Document/DocumentMarkdown.js","components/Document/DocumentPreview.js","components/Document/Document.js","components/Footer.js","App.js","index.js"],"names":["Header","react_default","a","createElement","DocumentName","_ref","name","handleChangeName","className","htmlFor","type","value","onChange","placeholder","Toolbar","props","children","Download","url","fileName","href","alt","download","DocumentMarkdown","markdown","handleChangeMarkdown","handleResetMarkdown","Document_Toolbar","Document_Download","onClick","id","DocumentPreview","preview","marked","setOptions","gfm","breaks","sanitize","Document","_useSessionStorageSta","storageKey","_useState","useState","sessionStorage","getItem","_useState2","Object","slicedToArray","data","setData","useEffect","setItem","useSessionStorageState","_useSessionStorageSta2","setMarkdown","_useState3","_useState4","setName","Document_DocumentName","e","target","Document_DocumentMarkdown","blob","Blob","window","URL","createObjectURL","createURL","Document_DocumentPreview","ReactHtmlParser","Footer","App","components_Header","components_Document_Document","components_Footer","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.6f97fcdc.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = () => {\n  return (\n    <header>\n      <h2>InstaMD</h2>\n    </header>\n\n  )\n}\n\nexport default Header;","import React from 'react';\n\nconst DocumentName = ({ name, handleChangeName }) => {\n\n  return (\n    <div className='document__title'>\n      <label htmlFor='title'>Document Name</label>\n      <input \n        type='text' \n        value={name} \n        onChange={handleChangeName} \n        name='title'\n        placeholder='untitled.md'\n      />\n    </div>\n  )\n}\n\nexport default DocumentName;","import React from 'react'\n\nconst Toolbar = (props) => {\n  return (\n    <div className=\"document__toolbar\">\n      {props.children}\n    </div>\n  )\n}\n\nexport default Toolbar","import React from \"react\";\n\nconst Download = ({ url, fileName }) => {\n  return (\n    <a href={url} \n       className=\"download__link\" \n       alt=\"download\" \n       download={fileName || 'untitled.md'}\n    >\n       Download\n    </a>\n  )\n}\n\nexport default Download;","import React from 'react';\n\nimport Toolbar from './Toolbar';\nimport Download from './Download';\n\nconst DocumentMarkdown = (\n  { markdown, \n    url,\n    fileName,\n    handleChangeMarkdown, \n    handleResetMarkdown \n  }) => {\n\n  return (\n    <div className='markdown'>\n      <Toolbar>\n        <p className='document__toolbar__title'>\n        Markdown\n        </p>\n        <div className='document__toolbar__buttons'>\n          <Download url={url} fileName={fileName} />\n          <button onClick={handleResetMarkdown}>Reset</button>\n        </div>\n      </Toolbar>\n      <textarea\n        value={markdown}\n        onChange={handleChangeMarkdown}\n        className='markdown__textarea'\n        id='editor'\n      />\n    </div>\n  )\n}\n\nexport default DocumentMarkdown;","import React from 'react';\n\nimport Toolbar from './Toolbar';\n\nconst DocumentPreview = ({preview}) => {\n   \n  return (\n    <div className='preview'>\n      <Toolbar>\n        <p className=\"document__toolbar__title\">\n          Preview\n        </p>\n      </Toolbar>\n      <div className='preview__textarea' id='preview'>\n        {preview}\n      </div>\n    </div>\n  )\n}\n\nexport default DocumentPreview;","import React, {useState, useEffect} from 'react';\nimport marked from 'marked';\nimport ReactHtmlParser from 'react-html-parser';\n\nimport DocumentName from './DocumentName';\nimport DocumentMarkdown from './DocumentMarkdown';\nimport DocumentPreview from './DocumentPreview';\n\nmarked.setOptions({\n  gfm: true,\n  breaks: true,\n  sanitize: true\n})\n\nconst STARTER_MD = \n`# InstaMD - Simple Markdown Previewer\n## What is Markdown?\n\nMarkdown is a lightweight markup language with plain text formatting syntax.\n  \nLearn more about Markdown:\n  \n* [Wikipedia](https://en.wikipedia.org/wiki/Markdown)\n* [Github Mastering Markdown](https://guides.github.com/features/mastering-markdown/)\n`\n\n// Custom hook for sessionStorage functionality\nconst useSessionStorageState = storageKey => {\n  // Use sessionStorage data or initial template when rendering component.\n  const [data, setData] = useState(sessionStorage.getItem(storageKey) || STARTER_MD)\n  \n  // When data changes set sessionStorage to current data.\n  useEffect(() => {\n    sessionStorage.setItem(storageKey, data)\n  })\n\n  return [data, setData]\n}\n\nconst Document = () => {\n  // hooks for markdown using useSessionsStorageState custom hook\n  const [markdown, setMarkdown] = useSessionStorageState('data')\n  const handleChangeMarkdown = (e) => {\n    setMarkdown(e.target.value)\n  }\n  const handleResetMarkdown = () => {\n    setMarkdown('')\n  }\n  \n  // hooks for file name\n  const [name, setName] = useState('');\n  const handleChangeName = (e) => {\n    setName(e.target.value)\n  }\n  \n  // Create file url using blob.\n  const createURL = () => {\n    const blob = new Blob([markdown], {type: 'text/markdown'})\n    return window.URL.createObjectURL(blob)\n  }\n\n  return (\n    <main className='document'>\n      <DocumentName name={name} handleChangeName={handleChangeName}/>\n      <div className='document__workspace'>\n        <DocumentMarkdown \n          markdown={markdown} \n          url={createURL()}\n          fileName={name}\n          handleChangeMarkdown={handleChangeMarkdown}\n          handleResetMarkdown={handleResetMarkdown}\n        />\n        <DocumentPreview preview={ReactHtmlParser(marked(markdown))}/>\n      </div>\n    </main>\n  )\n}\n\nexport default Document;","import React from 'react';\n\nconst Footer = () => {\n  return (\n    <footer>\n      <small>2019&copy;yosuahohoho</small>\n    </footer>\n  )\n}\n\nexport default Footer;","import React from 'react';\n\nimport Header from './components/Header';\nimport Document from './components/Document/Document';\nimport Footer from './components/Footer';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Header />\n      <Document />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}